"""
Django settings for pigg project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from requests.auth import HTTPBasicAuth
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(pwah@@(c$dd3x0nfb^9#7&ro!%#^8d*+pvgi+wfwbbh+1=ba)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apis.apps.ApisConfig',
    'authorization.apps.AuthorizationConfig',
    'landns.apps.LandnsConfig',
    'blog.apps.BlogConfig',
    'alter.apps.AlterConfig'
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pigg.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pigg.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'backend',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': 3306,
        # 'OPTIONS': {
        #     'init_command': 'SET sql_mode="STRICT_TRANS_TABLES",storage_engine=INNODB;',
        #     'charset': 'utf8mb4'
        # }
    },
    # 'slave': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
RESOURCES_DIR = os.path.join(BASE_DIR, 'resources')
LOG_DIR = os.path.join(BASE_DIR, 'ops', 'logs')

# clamav
LOCAL_IP = '192.168.27.128'
FILES_DIR = os.path.join(RESOURCES_DIR, 'tmpfiles')
YARA_DIR = '/var/lib/clamav'
# DNS
DNS_URL = 'http://192.168.27.128:8081'
DNS_BASICAUTH = HTTPBasicAuth('admin', 'admin')
DNS_CONFIG = os.path.join(RESOURCES_DIR, 'data', 'dnsmasq.conf')
# Prometheus
PROMETHEUS_QUERY_VECTOR_URL = 'http://localhost:9090/api/v1/query?query='
PROMETHEUS_QUERY_MATRIX_URL = 'http://localhost:9090/api/v1/query_range?query='
# sshd日志分析
ANALYSIS_DIR = os.path.join(BASE_DIR, 'ops', 'analysis')

# session超时时间[1h](单位秒)
SESSION_COOKIE_AGE = 60 * 60

# wx applet
WX_APP_SECRET = '2af0c1c442e2e9f58689c5980b5b03d1'

CACHES = {
    'default': {
        # 1.MemCache
        # 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        # 'LOCATION': '127.0.0.1:11211'

        # 2.DB Cache，需要在数据库中创建表
        # 'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        # 'LOCATION': 'my_cache_table',

        # 3.Filesystem Cache
        # 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        # 'LOCATION': '/var/tmp/django_cache'

        # 4.Local Mem Cache  ,默认的缓存配置
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'pigg-cache'
    }
}
